; ------------------------------------------------------------
; Mad Pascal Compiler version 1.6.6 [2022/01/30] for 6502
; ------------------------------------------------------------

STACKWIDTH	= 16
CODEORIGIN	= $2000

TRUE		= 1
FALSE		= 0

; ------------------------------------------------------------

	org $80

zpage

.ifdef @vbxe_detect
fxptr	.ds 2						; VBXE pointer
.fi

.if .def(@AllocMem)||.def(MAIN.SYSTEM.GETMEM)||.def(MAIN.SYSTEM.FREEMEM)
psptr	.ds 2						; PROGRAMSTACK Pointer
.fi

bp	.ds 2
bp2	.ds 2

eax	.ds 4						;8 bytes (aex + edx) -> divREAL
edx	.ds 4
ecx	.ds 4

TMP
ztmp
ztmp8	.ds 1
ztmp9	.ds 1
ztmp10	.ds 1
ztmp11	.ds 1

STACKORIGIN	.ds STACKWIDTH*4
zpend

; ------------------------------------------------------------

ax	= eax
al	= eax
ah	= eax+1

cx	= ecx
cl	= ecx
ch	= ecx+1

dx	= edx
dl	= edx
dh	= edx+1

	org eax

FP1MAN0	.ds 1
FP1MAN1	.ds 1
FP1MAN2	.ds 1
FP1MAN3	.ds 1

	org ztmp8

FP1SGN	.ds 1
FP1EXP	.ds 1

	org edx

FP2MAN0	.ds 1
FP2MAN1	.ds 1
FP2MAN2	.ds 1
FP2MAN3	.ds 1

	org ztmp10

FP2SGN	.ds 1
FP2EXP	.ds 1

	org ecx

FPMAN0	.ds 1
FPMAN1	.ds 1
FPMAN2	.ds 1
FPMAN3	.ds 1

	org bp2

FPSGN	.ds 1
FPEXP	.ds 1

	.ifdef MAIN.@DEFINES.BASICOFF
	org CODEORIGIN
	icl 'atari\basicoff.asm'
	ini CODEORIGIN
	.fi

	.ifdef MAIN.@DEFINES.S_VBXE
	opt h-
	ins 'atari\s_vbxe\sdxld2.obx'
	opt h+
	.fi

; ------------------------------------------------------------

	org CODEORIGIN

	STATICDATA

; ------------------------------------------------------------

RTLIB
	icl 'rtl6502_a8.asm'

.print 'ZPAGE: ',zpage,'..',zpend-1

.print 'RTLIB: ',RTLIB,'..',*-1

; ------------------------------------------------------------

START
	tsx
	stx MAIN.@halt+1

	.ifdef fmulinit
	fmulinit
	.fi

VLEN	= VARDATASIZE-VARINITSIZE
VADR	= DATAORIGIN+VARINITSIZE

	ift VADR > $BFFF
	ert 'Invalid memory address range ',VADR
	eli (VLEN>0) && (VLEN<=256)
	ldx #256-VLEN
	lda #$00
	sta:rne VADR+VLEN-256,x+
	eli VLEN>256
	@fill #VADR #VLEN #$00
	eif

.ifdef :psptr
	mwa #PROGRAMSTACK :psptr
.fi

	.ifdef MAIN.@DEFINES.ROMOFF
	icl 'atari\romoff.asm'
	.fi

	ldx #$0F					; DOS II+/D ParamStr
	mva:rpl $340,x MAIN.IOCB@COPY,x-

	inx						; X = 0
	stx bp						; BP = 0

	stx skctl					; reset POKEY
	lda #3
	sta skctl

	dex						; X = 255

	UNITINITIALIZATION

.local	MAIN						; PROCEDURE

	jmp l_037A

; ------------------------------------------------------------

.local	SYSTEM						; UNIT

.local	PEEK						; FUNCTION | ASSEMBLER | REGISTER

; ------------------------------------------------------------

; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
; as Pointer
	lda :STACKORIGIN,x
	sta A
	lda :STACKORIGIN+STACKWIDTH,x
	sta A+1
	dex
@main

; ---------------------  ASM Block 002  ---------------------

	ldy #0
	mva (:edx),y Result

@exit

; ------------------------------------------------------------

; Push BYTE / CHAR / SHORTINT / BOOLEAN
; as Pointer

	inx
	mva RESULT :STACKORIGIN,x

	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	eif

; ------------------------------------------------------------

A	= :EDX
RESULT	= DATAORIGIN+$000B

@VarData	= RESULT
@VarDataSize	= 1

	rts						; ret
.endl

.local	VAL_03A7					; PROCEDURE | ASSEMBLER | OVERLOAD

; ---------------------  ASM Block 014  ---------------------

	@StrToInt s

	tya
	pha

	mwa code :bp2
	ldy #0

	pla
	sta (:bp2),y

	mwa v :bp2

	mva :edx (:bp2),y+
	mva :edx+1 (:bp2),y+
	mva :edx+2 (:bp2),y+
	mva :edx+3 (:bp2),y


; ------------------------------------------------------------

S	= DATAORIGIN+$000C
V	= DATAORIGIN+$000E
CODE	= DATAORIGIN+$0010

@VarData	= S
@VarDataSize	= 6

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	SETLENGTH					; PROCEDURE | ASSEMBLER | REGISTER

; ---------------------  ASM Block 033  ---------------------

	ldy #0
	mva Len (:edx),y


; ------------------------------------------------------------

S	= :EDX
LEN	= :ECX
@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	PAUSE_03DD					; PROCEDURE | ASSEMBLER | OVERLOAD

; ---------------------  ASM Block 037  ---------------------


loop	lda n
	ora n+1
	beq stop

	lda:cmp:req :rtclok+2

	dew n

	jmp loop
stop



; ------------------------------------------------------------

N	= DATAORIGIN+$0012

@VarData	= N
@VarDataSize	= 2

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	CONCAT_03DF					; FUNCTION | ASSEMBLER | OVERLOAD

; ---------------------  ASM Block 047  ---------------------

	cpw a #@buf
	beq skp

	mva #0 @buf
	@addString a
skp
	inc @buf
	ldy @buf
	lda b
	sta @buf,y

	ldy #0
	mva:rne @buf,y adr.Result,y+

@exit

; ------------------------------------------------------------

A	= DATAORIGIN+$0014
B	= DATAORIGIN+$0016
adr.RESULT	= [DATAORIGIN+$0017] .array [256]
.var RESULT	= adr.RESULT .word

@VarData	= A
@VarDataSize	= 259

	rts						; ret
.endl

; ------------------------------------------------------------

__PORTB_BANKS	= $0101
M_PI_2	= $0648
D_PI_2	= $0192
D_PI_180	= $04
MGTIA	= $00
MVBXE	= $80
VBXE_XDLADR	= $00
VBXE_BCBADR	= $0100
VBXE_MAPADR	= $1000
VBXE_CHBASE	= $1000
VBXE_OVRADR	= $5000
VBXE_WINDOW	= $B000
IDLI	= $00
IVBL	= $01
ITIM1	= $02
ITIM2	= $03
ITIM4	= $04
CH_DELCHR	= $FE
CH_ENTER	= $9B
CH_ESC	= $1B
CH_CURS_UP	= $1C
CH_CURS_DOWN	= $1D
CH_CURS_LEFT	= $1E
CH_CURS_RIGHT	= $1F
CH_TAB	= $7F
CH_EOL	= $9B
CH_CLR	= $7D
CH_BELL	= $FD
CH_DEL	= $7E
CH_DELLINE	= $9C
CH_INSLINE	= $9D
COLOR_BLACK	= $00
COLOR_WHITE	= $0E
COLOR_RED	= $32
COLOR_CYAN	= $96
COLOR_VIOLET	= $68
COLOR_GREEN	= $C4
COLOR_BLUE	= $74
COLOR_YELLOW	= $EE
COLOR_ORANGE	= $28
COLOR_BROWN	= $E4
COLOR_LIGHTRED	= $3C
COLOR_GRAY1	= $04
COLOR_GRAY2	= $06
COLOR_GRAY3	= $0A
COLOR_LIGHTGREEN	= $CC
COLOR_LIGHTBLUE	= $7C
FMOPENREAD	= $04
FMOPENWRITE	= $08
FMOPENAPPEND	= $09
FMOPENREADWRITE	= $0C
SCREENWIDTH	= DATAORIGIN+$0000
SCREENHEIGHT	= DATAORIGIN+$0002
DATESEPARATOR	= DATAORIGIN+$0004
RND	= $D20A
adr.PALETTE	= $02C0
.var PALETTE	= adr.PALETTE .word
adr.HPALETTE	= $D012
.var HPALETTE	= adr.HPALETTE .word
FILEMODE	= DATAORIGIN+$0005
GRAPHMODE	= DATAORIGIN+$0006
IORESULT	= DATAORIGIN+$0007
EOLN	= DATAORIGIN+$0008
RNDSEED	= DATAORIGIN+$0009

.endl							; UNIT SYSTEM

; ------------------------------------------------------------

.local	ATARI						; UNIT

; ------------------------------------------------------------

IRQENS	= $10
RTCLOK	= $12
RTCLOK1	= $12
RTCLOK2	= $13
RTCLOK3	= $14
ATRACT	= $4D
LMARGIN	= $52
RMARGIN	= $53
ROWCRS	= $54
COLCRS	= $55
DINDEX	= $57
SAVMSC	= $58
PALNTS	= $62
RAMTOP	= $6A
VDSLST	= $0200
SDLSTL	= $0230
TXTROW	= $0290
TXTCOL	= $0291
TINDEX	= $0293
TXTMSC	= $0294
SDMCTL	= $022F
GPRIOR	= $026F
CRSINH	= $02F0
CHACT	= $02F3
CHBAS	= $02F4
CH	= $02FC
PCOLR0	= $02C0
PCOLR1	= $02C1
PCOLR2	= $02C2
PCOLR3	= $02C3
COLOR0	= $02C4
COLOR1	= $02C5
COLOR2	= $02C6
COLOR3	= $02C7
COLOR4	= $02C8
COLBAKS	= $02C8
HPOSP0	= $D000
HPOSP1	= $D001
HPOSP2	= $D002
HPOSP3	= $D003
HPOSM0	= $D004
HPOSM1	= $D005
HPOSM2	= $D006
HPOSM3	= $D007
SIZEP0	= $D008
SIZEP1	= $D009
SIZEP2	= $D00A
SIZEP3	= $D00B
SIZEM	= $D00C
GRAFP0	= $D00D
GRAFP1	= $D00E
GRAFP2	= $D00F
GRAFP3	= $D010
GRAFM	= $D011
P0PF	= $D004
PAL	= $D014
COLPM0	= $D012
COLPM1	= $D013
COLPM2	= $D014
COLPM3	= $D015
COLPF0	= $D016
COLPF1	= $D017
COLPF2	= $D018
COLPF3	= $D019
COLBK	= $D01A
PRIOR	= $D01B
GRACTL	= $D01D
HITCLR	= $D01E
CONSOL	= $D01F
AUDF1	= $D200
AUDC1	= $D201
AUDF2	= $D202
AUDC2	= $D203
AUDF3	= $D204
AUDC3	= $D205
AUDF4	= $D206
AUDC4	= $D207
AUDCTL	= $D208
KBCODE	= $D209
IRQEN	= $D20E
SKSTAT	= $D20F
PORTA	= $D300
PORTB	= $D301
DMACTL	= $D400
CHACTL	= $D401
DLISTL	= $D402
HSCROL	= $D404
VSCROL	= $D405
PMBASE	= $D407
CHBASE	= $D409
WSYNC	= $D40A
VCOUNT	= $D40B
PENH	= $D40C
PENV	= $D40D
NMIEN	= $D40E
NMIVEC	= $FFFA
RESETVEC	= $FFFC
IRQVEC	= $FFFE

.endl							; UNIT ATARI

; ------------------------------------------------------------

.local	CRT						; UNIT

.local	CURSOROFF					; PROCEDURE

; optimize OK (crt_atari.inc), line = 8

	lda #$01
	sta ATARI.CRSINH

; optimize FAIL ('@print', crt_atari.inc), line = 10

	@print #$1F
	@print #$1E
@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	CURSORON					; PROCEDURE

; optimize OK (crt_atari.inc), line = 21

	lda #$00
	sta ATARI.CRSINH

; optimize FAIL ('@print', crt_atari.inc), line = 23

	@print #$1F
	@print #$1E
@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	KEYPRESSED					; FUNCTION | ASSEMBLER

; ---------------------  ASM Block 056  ---------------------

	ldy #$00	; false
	lda kbcodes
	cmp #$ff
	beq skp
	iny		; true

;	sty kbcodes

skp	sty Result

@exit

; ------------------------------------------------------------

RESULT	= DATAORIGIN+$0118

@VarData	= RESULT
@VarDataSize	= 1

	rts						; ret
.endl

; ------------------------------------------------------------

TEXTATTR	= DATAORIGIN+$0117
CONSOL	= $D01F
CN_START_SELECT_OPTION	= $00
CN_SELECT_OPTION	= $01
CN_START_OPTION	= $02
CN_OPTION	= $03
CN_START_SELECT	= $04
CN_SELECT	= $05
CN_START	= $06
CN_NONE	= $07
BW40	= $00
CO40	= $01
BW80	= $02
CO80	= $03
MONO	= $07
C40	= $01
C80	= $03
BLACK	= $00
WHITE	= $0F
RED	= $26
CYAN	= $AC
PURPLE	= $48
GREEN	= $B6
BLUE	= $86
YELLOW	= $DC
ORANGE	= $18
BROWN	= $F4
LIGHT_RED	= $2A
DARK_GREY	= $04
GREY	= $08
LIGHT_GREEN	= $BC
LIGHT_BLUE	= $9A
LIGHT_GREY	= $0C
BLINK	= $80

.endl							; UNIT CRT

; ------------------------------------------------------------

.local	CIO						; UNIT

.local	OPN						; PROCEDURE | ASSEMBLER

; ---------------------  ASM Block 063  ---------------------

	txa:pha

	lda chn
	:4 asl @
	tax

	lda #$03		;komenda: OPEN
	sta iccmd,x

	inw device		;omin bajt z dlugoscia STRING-a

	lda device		;adres nazwy pliku
	sta icbufa,x
	lda device+1
	sta icbufa+1,x

	lda ax1			;kod dostepu: $04 odczyt, $08 zapis, $09 dopisywanie, $0c odczyt/zapis, $0d odczyt/dopisywanie
	sta icax1,x

	lda ax2			;dodatkowy parametr, $00 jest zawsze dobre
	sta icax2,x

	m@call	ciov

	sty MAIN.SYSTEM.IOResult

	pla:tax


; ------------------------------------------------------------

CHN	= DATAORIGIN+$0119
AX1	= DATAORIGIN+$011A
AX2	= DATAORIGIN+$011B
DEVICE	= DATAORIGIN+$011C

@VarData	= CHN
@VarDataSize	= 5

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	CLS						; PROCEDURE | ASSEMBLER
	sta CHN

; ---------------------  ASM Block 064  ---------------------

	txa:pha

	lda chn
	:4 asl @
	tax

	lda #$0c		;komenda: CLOSE
	sta iccmd,x

	m@call	ciov

	sty MAIN.SYSTEM.IOResult

	pla:tax


; ------------------------------------------------------------

CHN	= DATAORIGIN+$011E

@VarData	= CHN
@VarDataSize	= 1

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	RGET						; FUNCTION | REGISTER

; ---------------------  ASM Block 070  ---------------------

	txa:pha

        lda chn
        :4 asl @
        tax

        lda #5
        sta iccmd,x

        lda buffer
        sta icbufa,x
        lda buffer+1
        sta icbufa+1,x
        lda #$ff
        sta icbufl,x
        lda #0
        sta icbufl+1,x

        m@call	ciov

	pla:tax
     
	mva #$00 adr.TMP

; optimize OK (CIO), line = 334

	lda #$00
	sta CNT

; --- WhileProlog
	jmp l_041E
l_041F

; optimize OK (CIO), line = 338

	mwy BUFFER :bp2
	ldy CNT
	lda (:bp2),y
	sta SYSTEM.CONCAT_03DF.B
	lda TMP
	sta SYSTEM.CONCAT_03DF.A
	lda TMP+1
	sta SYSTEM.CONCAT_03DF.A+1
	jsr SYSTEM.CONCAT_03DF
	inx
	lda SYSTEM.CONCAT_03DF.RESULT
	sta @move.src
	lda SYSTEM.CONCAT_03DF.RESULT+1
	sta @move.src+1
	@moveSTRING TMP #33
	dex

; optimize FAIL (0, CIO), line = 339

	inc CNT
l_041E

; optimize OK (CIO), line = 337

	mwy BUFFER :bp2
	ldy CNT
	lda (:bp2),y
	cmp #$9B
	jne l_041F

; optimize OK (CIO), line = 342

	lda TMP
	sta @move.src
	lda TMP+1
	sta @move.src+1
	@moveSTRING RESULT #33
@exit

; ------------------------------------------------------------

CHN	= :EDX
BUFFER	= :ECX
adr.RESULT	= [DATAORIGIN+$011F] .array [33]
.var RESULT	= adr.RESULT .word
CNT	= DATAORIGIN+$0140
adr.TMP	= [DATAORIGIN+$0141] .array [33]
.var TMP	= adr.TMP .word

@VarData	= RESULT
@VarDataSize	= 67

	rts						; ret
.endl

.local	RSKIP						; PROCEDURE | ASSEMBLER | REGISTER

; ---------------------  ASM Block 071  ---------------------

	txa:pha

	lda chn
        :4 asl @
        tax

        lda #5
        sta iccmd,x

        lda buffer
        sta icbufa,x
        lda buffer+1
        sta icbufa+1,x
        lda #$ff
        sta icbufl,x
        lda #0
        sta icbufl+1,x

	m@call ciov

	pla:tax


; ------------------------------------------------------------

CHN	= :EDX
BUFFER	= :ECX
@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	FINDFIRSTFREECHANNEL				; FUNCTION | ASSEMBLER

; ---------------------  ASM Block 072  ---------------------

	txa:pha

	ldx #$00
        ldy #$01
loop	lda icchid,x
        cmp #$ff
        beq found
        txa
        clc
        adc #$10
        tax
        bpl loop
        ldx #-95
found 	stx Result

	pla:tax

@exit

; ------------------------------------------------------------

RESULT	= DATAORIGIN+$0162

@VarData	= RESULT
@VarDataSize	= 1

	rts						; ret
.endl

; ------------------------------------------------------------

.endl							; UNIT CIO

; ------------------------------------------------------------

.local	STRINGUTILS					; UNIT

.local	STRRIGHT					; FUNCTION

; ------------------------------------------------------------

; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
; as Pointer
	lda :STACKORIGIN,x
	sta :bp2
	lda :STACKORIGIN+STACKWIDTH,x
	sta :bp2+1
	ldy #$00
	mva:rne (:bp2),y adr.S,y+
	mwa #adr.S S
	dex
	jmi @main

; ------------------------------------------------------------

; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
; as Pointer
	lda :STACKORIGIN,x
	sta COUNT
	dex
@main

; optimize OK (STRINGUTILS), line = 287

	lda R
	sta SYSTEM.SETLENGTH.S
	lda R+1
	sta SYSTEM.SETLENGTH.S+1
	lda COUNT
	sta SYSTEM.SETLENGTH.LEN
	jsr SYSTEM.SETLENGTH

; optimize OK (STRINGUTILS), line = 288

	lda adr.S
	sub COUNT
	add #$01
	sta I
	mva adr.S @FORTMP_0468_0

l_046B
; --- ForToDoCondition
	lda @FORTMP_0468_0:#$00
	cmp I
	jcc l_0479
	lda adr.S
	sub COUNT
	sta :STACKORIGIN+10
	lda #$00
	sbc #$00
	sta :STACKORIGIN+STACKWIDTH+10
	lda I
	sub :STACKORIGIN+10
	sta :STACKORIGIN+9
	lda #$00
	sbc :STACKORIGIN+STACKWIDTH+10
	sta :STACKORIGIN+STACKWIDTH+9
	ldy I
	lda adr.S,y
	sta :STACKORIGIN+10
	lda :STACKORIGIN+9
	add #$00
	tay
	lda :STACKORIGIN+STACKWIDTH+9
	adc #$00
	sta :STACKORIGIN+STACKWIDTH+9
	lda :STACKORIGIN+10
	sta adr.R,y

; --- ForToDoEpilog
	inc I
	jne l_046B
l_0479

; optimize OK (STRINGUTILS), line = 289

	lda R
	sta @move.src
	lda R+1
	sta @move.src+1
	mwy RESULT :bp2
	ldy #$00
	mva:rne (@move.src),y (:bp2),y+
@exit

; ------------------------------------------------------------

adr.S	= [DATAORIGIN+$0163] .array [256]
.var S	= adr.S .word
COUNT	= DATAORIGIN+$0263
adr.RESULT	= [DATAORIGIN+$0264] .array [256]
.var RESULT	= adr.RESULT .word
adr.R	= [DATAORIGIN+$0364] .array [256]
.var R	= adr.R .word
I	= DATAORIGIN+$0464

@VarData	= S
@VarDataSize	= 770

	rts						; ret
.endl

.local	STRPOS_0497					; FUNCTION | OVERLOAD

; ------------------------------------------------------------

; Generate Assignment for BYTE / CHAR / SHORTINT / BOOLEAN
; as Pointer
	lda :STACKORIGIN,x
	sta C
	dex
	jmi @main

; ------------------------------------------------------------

; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
; as Pointer
	lda :STACKORIGIN,x
	sta :bp2
	lda :STACKORIGIN+STACKWIDTH,x
	sta :bp2+1
	ldy #$00
	mva:rne (:bp2),y adr.S,y+
	mwa #adr.S S
	dex
@main

; optimize OK (STRINGUTILS), line = 307

	lda adr.S
	sta SLEN

; optimize OK (STRINGUTILS), line = 308

	lda #$00
	sta RESULT

; optimize OK (STRINGUTILS), line = 310

	lda #$01
	sta I
	ldy SLEN
	dey
	sty @FORTMP_04B3_0

l_04B6
; --- ForToDoCondition
	lda @FORTMP_04B3_0:#$00
	cmp I
	jcc l_04C4

; optimize OK (STRINGUTILS), line = 312

	ldy I
	lda adr.S,y
	cmp C
	jne l_04DB

; optimize OK (STRINGUTILS), line = 314

	lda I
	sta RESULT
	jmp b_04B6					; break
l_04DB

; --- ForToDoEpilog
	inc I
	jne l_04B6
l_04C4
b_04B6
@exit

; ------------------------------------------------------------

C	= DATAORIGIN+$0466
adr.S	= [DATAORIGIN+$0467] .array [256]
.var S	= adr.S .word
RESULT	= DATAORIGIN+$0567
SLEN	= DATAORIGIN+$0568
I	= DATAORIGIN+$0569

@VarData	= C
@VarDataSize	= 260

	rts						; ret
.endl

; ------------------------------------------------------------

.endl							; UNIT STRINGUTILS

; ------------------------------------------------------------

.local	TYPES						; UNIT

; ------------------------------------------------------------

.endl							; UNIT TYPES

; ------------------------------------------------------------

.local	GRAPH						; UNIT

.local	INITGRAPH_0517					; PROCEDURE | OVERLOAD
	sta MODE

; ---------------------  ASM Block 074  ---------------------

	txa:pha

	lda mode
	sta MAIN.SYSTEM.GraphMode
	and #$0f
	tay

	ldx #$60		; 6*16
	lda mode		; %00010000 with text window
	and #$10
	eor #$10
	ora #2			; read

	.nowarn @GRAPHICS

	sty GraphResult


	.ifdef MAIN.@DEFINES.ROMOFF
	inc portb
	.endif

	ldx dindex
	ldy adr.tlshc,x
	lda #5
shift	asl @
	dey
	bne shift

	sta SCANLINE_WIDTH

; Fox/TQA

dindex	equ $57

	ldx dindex
	lda adr.tmccn,x
	ldy adr.tmrcn,x
	ldx #0
	cmp #<320
	sne:inx

; X:A = horizontal resolution
; Y = vertical resolution

	@SCREENSIZE

	.ifdef MAIN.@DEFINES.ROMOFF
	dec portb
	.endif

	pla:tax
 

; optimize OK (graph_atari.inc), line = 85

	lda ATARI.SAVMSC
	sta VIDEORAM
	lda ATARI.SAVMSC+1
	sta VIDEORAM+1

; ------------------------------------------------------------

MODE	= DATAORIGIN+$0588
adr.TLSHC	= CODEORIGIN+$0373
.var TLSHC	= adr.TLSHC .word
adr.TMCCN	= CODEORIGIN+$0383
.var TMCCN	= adr.TMCCN .word
adr.TMRCN	= CODEORIGIN+$0393
.var TMRCN	= adr.TMRCN .word

@VarData	= MODE
@VarDataSize	= 1

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	SETCOLOR					; PROCEDURE | ASSEMBLER
	sta COLOR

; ---------------------  ASM Block 077  ---------------------

	sta @COMMAND.colscr
	sta GetColor


; ------------------------------------------------------------

COLOR	= DATAORIGIN+$0589

@VarData	= COLOR
@VarDataSize	= 1

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	PUTPIXEL_0521					; PROCEDURE | ASSEMBLER | OVERLOAD

; ---------------------  ASM Block 078  ---------------------

	txa:pha

	lda y+1
	bmi stop
	cmp MAIN.SYSTEM.ScreenHeight+1
	bne sk0
	lda y
	cmp MAIN.SYSTEM.ScreenHeight
sk0
	bcs stop

	lda x+1
	bmi stop
	cmp MAIN.SYSTEM.ScreenWidth+1
	bne sk1
	lda x
	cmp MAIN.SYSTEM.ScreenWidth
sk1
	bcs stop

	mwa x colcrs
	mva y rowcrs

;	lda #@IDput		; slower
;	jsr @COMMAND

	ldx @COMMAND.scrchn	; faster
	lda @COMMAND.colscr

	m@call	@putchar.main

stop	pla:tax



; ------------------------------------------------------------

X	= DATAORIGIN+$058A
Y	= DATAORIGIN+$058C

@VarData	= X
@VarDataSize	= 4

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

; ------------------------------------------------------------

CURRENTDRIVER	= $80
DETECT	= $00
CGA	= $01
MCGA	= $02
EGA	= $03
EGA64	= $04
EGAMONO	= $05
LOWRES	= $06
HERCMONO	= $07
VGA	= $09
VESA	= $0A
D1BIT	= $0B
D2BIT	= $0C
D4BIT	= $0D
D6BIT	= $0E
D8BIT	= $0F
D12BIT	= $10
M640X400	= $18
M640X480	= $18
GROK	= $01
GRNOINITGRAPH	= $FF
GRNOTDETECTED	= $FE
GRFILENOTFOUND	= $FD
GRINVALIDDRIVER	= $FC
GRNOLOADMEM	= $FB
GRNOSCANMEM	= $FA
GRNOFLOODMEM	= $F9
GRFONTNOTFOUND	= $F8
GRNOFONTMEM	= $F7
GRINVALIDMODE	= $F6
GRERROR	= $F5
GRIOERROR	= $F4
GRINVALIDFONT	= $F3
GRINVALIDFONTNUM	= $F2
GRINVALIDVERSION	= $EE
CGAC0	= $00
CGAC1	= $01
CGAC2	= $02
CGAC3	= $03
CGAHI	= $04
MCGAC0	= $00
MCGAC1	= $01
MCGAC2	= $02
MCGAC3	= $03
MCGAMED	= $04
MCGAHI	= $05
EGALO	= $00
EGAHI	= $01
EGA64LO	= $00
EGA64HI	= $01
EGAMONOHI	= $03
VGALO	= $0A
VGAMED	= $1F
VGAHI	= $18
WIN_LEFT	= DATAORIGIN+$056B
WIN_RIGHT	= DATAORIGIN+$056D
WIN_TOP	= DATAORIGIN+$056F
WIN_BOTTOM	= DATAORIGIN+$0571
GRAPHRESULT	= DATAORIGIN+$0573
GETCOLOR	= DATAORIGIN+$0574
VIDEORAM	= DATAORIGIN+$0575
adr.LASTARCCOORDS	= [DATAORIGIN+$0577] .array [5] ; type unknown
.var LASTARCCOORDS	= adr.LASTARCCOORDS .word
LASTARCCOORDS.X	= DATAORIGIN+$0577
LASTARCCOORDS.Y	= DATAORIGIN+$0579
LASTARCCOORDS.XSTART	= DATAORIGIN+$057B
LASTARCCOORDS.YSTART	= DATAORIGIN+$057D
LASTARCCOORDS.XEND	= DATAORIGIN+$057F
LASTARCCOORDS.YEND	= DATAORIGIN+$0581
SCANLINE_WIDTH	= DATAORIGIN+$0583
CURRENTX	= DATAORIGIN+$0584
CURRENTY	= DATAORIGIN+$0586

.endl							; UNIT GRAPH

; ------------------------------------------------------------

.local	DOS						; UNIT

; ------------------------------------------------------------

PALNTSC	= $D014

.endl							; UNIT DOS

; ------------------------------------------------------------

.local	STRUTILS					; UNIT

; ------------------------------------------------------------

.endl							; UNIT STRUTILS

; ------------------------------------------------------------

.local	SYSUTILS					; UNIT

; ------------------------------------------------------------

FAREADONLY	= $01
FAHIDDEN	= $02
FASYSFILE	= $04
FAVOLUMEID	= $08
FADIRECTORY	= $10
FAARCHIVE	= $20
FAANYFILE	= $3F

.endl							; UNIT SYSUTILS

.local	CLEARKEYS					; PROCEDURE

; optimize OK (heatmap.pas), line = 57

	lda #$FF
	sta CH
	lda #$00
	sta KEY
@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	GETSTRING					; FUNCTION
	sta MAXCHARS

; optimize OK (heatmap.pas), line = 77

	lda #$00
	sta SUCCESS

; --- WhileProlog
	jmp l_05B1
l_05B2

; optimize FAIL ('@print', heatmap.pas), line = 81

	@printSTRING #CODEORIGIN+$000F
	@printEOL

; optimize FAIL ('@print', heatmap.pas), line = 82

	@printSTRING #CODEORIGIN+$0035
	@printEOL

; optimize FAIL ('@print', heatmap.pas), line = 83

	@printSTRING #CODEORIGIN+$005A
	@printEOL

; optimize FAIL ('@print', heatmap.pas), line = 84

	@printSTRING #CODEORIGIN+$0071
	@printEOL

; optimize FAIL ('@print', heatmap.pas), line = 85

	@printEOL

; ---------------------  ASM Block 115  ---------------------



               iccmd    = $0342
               icbufa   = $0344
               icbufl   = $0348

               lda #<TEXT_BUFFER
               ldy #>TEXT_BUFFER
               ldx #$00
               sta icbufa,x
               tya
               sta icbufa+1,x
               lda maxChars
               sta icbufl,x
               lda #$00
               sta icbufl+1,x
               lda #$05
               sta iccmd,x
               jsr $E456
               sty CIOResult;
          

; optimize OK (heatmap.pas), line = 109

	lda CIORESULT
	cmp #$80
	jne l_05D0

; optimize FAIL ('@print', heatmap.pas), line = 110

	@printSTRING #CODEORIGIN+$008D
	@printEOL
	lda #$00
	jmp @halt
l_05D0

; optimize OK (heatmap.pas), line = 116

	lda $9000
	cmp #$2A
	jne l_05E9

; optimize FAIL ('@print', heatmap.pas), line = 118

	@printSTRING #CODEORIGIN+$00A7
	@printEOL

; optimize FAIL ('@print', heatmap.pas), line = 119

	@printEOL

; optimize OK (heatmap.pas), line = 121

	lda FREECHANNEL
	sta CIO.OPN.CHN
	lda #$06
	sta CIO.OPN.AX1
	lda #$00
	sta CIO.OPN.AX2
	lda #$BB
	sta CIO.OPN.DEVICE
	lda #$20
	sta CIO.OPN.DEVICE+1
	jsr CIO.OPN

; optimize OK (heatmap.pas), line = 123

	lda #$01
	sta ISANOTHER

; --- WhileProlog
	jmp l_05FA
l_05FB

; optimize OK (heatmap.pas), line = 126

	lda FREECHANNEL
	sta CIO.RGET.CHN
	lda #$00
	sta CIO.RGET.BUFFER
	lda #$80
	sta CIO.RGET.BUFFER+1
	jsr CIO.RGET
	inx
	lda CIO.RGET.RESULT
	sta @move.src
	lda CIO.RGET.RESULT+1
	sta @move.src+1
	mwy REC :bp2
	ldy #$00
	mva:rne (@move.src),y (:bp2),y+
	dex

; optimize OK (heatmap.pas), line = 127

	lda adr.REC+$01
	cmp #$20
	jne l_0613
	@printSTRING REC
	@printEOL
	jmp l_0623
l_0613
	lda #$00
	sta ISANOTHER
l_0623
l_05FA

; optimize OK (heatmap.pas), line = 125

	lda ISANOTHER
	jne l_05FB

; optimize OK (heatmap.pas), line = 130

	lda FREECHANNEL
	jsr CIO.CLS

; optimize FAIL ('@print', heatmap.pas), line = 131

	@printEOL

; optimize FAIL ('CLEARKEYS', heatmap.pas), line = 133

	jsr CLEARKEYS
	jmp l_063B
l_05E9

; optimize OK (heatmap.pas), line = 137

	lda #$01
	sta SUCCESS
l_063B
l_05B1

; optimize OK (heatmap.pas), line = 79

	lda SUCCESS
	jeq l_05B2

; optimize OK (heatmap.pas), line = 145

	lda $9000
	cmp #$44
	jeq l_0664
	lda $9001
	cmp #$3A
	jeq l_0664
	ldy #256-3
	mva:rne CODEORIGIN+$00C4+3-256,y adr.PATH+3-256,y+
	jmp l_066E
l_0664
	mva #$00 adr.PATH
l_066E

; optimize OK (heatmap.pas), line = 153

	lda #$00
	sta CNT

; --- WhileProlog
	jmp l_0674
l_0675

; optimize OK (heatmap.pas), line = 158

	ldy CNT
	lda $9000,y
	sta SYSTEM.CONCAT_03DF.B
	lda PATH
	sta SYSTEM.CONCAT_03DF.A
	lda PATH+1
	sta SYSTEM.CONCAT_03DF.A+1
	jsr SYSTEM.CONCAT_03DF
	inx
	lda SYSTEM.CONCAT_03DF.RESULT
	sta @move.src
	lda SYSTEM.CONCAT_03DF.RESULT+1
	sta @move.src+1
	@moveSTRING PATH #33
	dex

; optimize FAIL (0, heatmap.pas), line = 159

	inc CNT
l_0674

; optimize OK (heatmap.pas), line = 157

	ldy CNT
	lda $9000,y
	cmp #$9B
	jne l_0675

; optimize OK (heatmap.pas), line = 162

	lda PATH
	sta @move.src
	lda PATH+1
	sta @move.src+1
	@moveSTRING RESULT #33
@exit

; ------------------------------------------------------------

MAXCHARS	= DATAORIGIN+$2521
adr.RESULT	= [DATAORIGIN+$2522] .array [33]
.var RESULT	= adr.RESULT .word
CNT	= DATAORIGIN+$2543
adr.PATH	= [DATAORIGIN+$2544] .array [33]
.var PATH	= adr.PATH .word
ISANOTHER	= DATAORIGIN+$2565
SUCCESS	= DATAORIGIN+$2566

@VarData	= MAXCHARS
@VarDataSize	= 70

	rts						; ret
.endl

.local	OPENFILE					; PROCEDURE

; optimize FAIL ('CIO.FINDFIRSTFREECHANNEL', heatmap.pas), line = 176

	jsr CIO.FINDFIRSTFREECHANNEL
	lda CIO.FINDFIRSTFREECHANNEL.RESULT
	sta FREECHANNEL

; optimize OK (heatmap.pas), line = 180

	cmp #$A1
	jne l_06B1

; optimize FAIL ('@print', heatmap.pas), line = 181

	@printSTRING #CODEORIGIN+$00C8
	@printEOL
	lda #$00
	jmp @halt
l_06B1

; optimize OK (heatmap.pas), line = 187

	lda FREECHANNEL
	lsr @
	lsr @
	lsr @
	lsr @
	sta FREECHANNEL

; optimize OK (heatmap.pas), line = 191

	lda #$00
	sta SUCCESS

; optimize FAIL ('CLEARKEYS', heatmap.pas), line = 193

	jsr CLEARKEYS

; --- WhileProlog
	jmp l_06CA
l_06CB

; optimize OK (heatmap.pas), line = 197

	lda #$10
	jsr GETSTRING
	inx
	lda GETSTRING.RESULT
	sta @move.src
	lda GETSTRING.RESULT+1
	sta @move.src+1
	@moveSTRING FILENAME #17
	dex

; optimize OK (heatmap.pas), line = 201

	lda FREECHANNEL
	sta CIO.OPN.CHN
	lda #$04
	sta CIO.OPN.AX1
	lda #$00
	sta CIO.OPN.AX2
	lda FILENAME
	sta CIO.OPN.DEVICE
	lda FILENAME+1
	sta CIO.OPN.DEVICE+1
	jsr CIO.OPN

; optimize OK (heatmap.pas), line = 205

	lda SYSTEM.IORESULT
	cmp #$01
	jeq l_06E7

; optimize FAIL ('@print', heatmap.pas), line = 206

	@printSTRING #CODEORIGIN+$00EC
	@printEOL

; optimize FAIL ('@print', heatmap.pas), line = 207

	@printEOL

; optimize OK (heatmap.pas), line = 208

	lda FREECHANNEL
	jsr CIO.CLS
	jmp l_06F8
l_06E7

; optimize OK (heatmap.pas), line = 210

	lda #$01
	sta SUCCESS
l_06F8
l_06CA

; optimize OK (heatmap.pas), line = 195

	lda SUCCESS
	jeq l_06CB

; optimize OK (heatmap.pas), line = 218

	lda FREECHANNEL
	sta CIO.RGET.CHN
	lda #$00
	sta CIO.RGET.BUFFER
	lda #$80
	sta CIO.RGET.BUFFER+1
	jsr CIO.RGET
	inx
	lda CIO.RGET.RESULT
	sta @move.src
	lda CIO.RGET.RESULT+1
	sta @move.src+1
	mwy REC :bp2
	ldy #$00
	mva:rne (@move.src),y (:bp2),y+

; optimize FAIL ('cmpSTRING', heatmap.pas), line = 220

	mva REC :STACKORIGIN,x
	mva REC+1 :STACKORIGIN+STACKWIDTH,x
	inx
	mva #$FD :STACKORIGIN,x
	mva #$20 :STACKORIGIN+STACKWIDTH,x
	ldy #1
	jsr cmpSTRING
	bne @+
	dey
@
	dex
	dex
	tya
	jeq l_071B

; optimize FAIL ('@print', heatmap.pas), line = 221

	@printSTRING #CODEORIGIN+$0104
	@printEOL

; optimize OK (heatmap.pas), line = 222

	lda FREECHANNEL
	jsr CIO.CLS
	lda #$00
	jmp @halt
l_071B

; ------------------------------------------------------------

SUCCESS	= DATAORIGIN+$2567

@VarData	= SUCCESS
@VarDataSize	= 1

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	CONVERTVALUE					; FUNCTION

; ------------------------------------------------------------

; Generate Assignment for WORD / SMALLINT / SHORTREAL / POINTER
; as Pointer
	lda :STACKORIGIN,x
	sta :bp2
	lda :STACKORIGIN+STACKWIDTH,x
	sta :bp2+1
	ldy #$20
	mva:rpl (:bp2),y adr.REC,y-
	mwa #adr.REC REC
	dex
@main

; optimize FAIL ('STRINGUTILS.STRPOS_0497', heatmap.pas), line = 238

	inx
	mva REC :STACKORIGIN,x
	mva REC+1 :STACKORIGIN+STACKWIDTH,x
	inx
	mva #$2C :STACKORIGIN,x
	jsr STRINGUTILS.STRPOS_0497
	lda STRINGUTILS.STRPOS_0497.RESULT
	sta COMMAPOS

; optimize FAIL ('STRINGUTILS.STRRIGHT', heatmap.pas), line = 239

	inx
	lda adr.REC
	sta :STACKORIGIN,x
	inx
	mva COMMAPOS :STACKORIGIN,x
	jsr subAL_CL
	mva REC :STACKORIGIN,x
	mva REC+1 :STACKORIGIN+STACKWIDTH,x
	jsr STRINGUTILS.STRRIGHT
	inx
	lda STRINGUTILS.STRRIGHT.RESULT
	sta @move.src
	lda STRINGUTILS.STRRIGHT.RESULT+1
	sta @move.src+1
	@moveSTRING VALUESTRING #11
	dex

; optimize OK (heatmap.pas), line = 240

	lda VALUESTRING
	sta SYSTEM.VAL_03A7.S
	lda VALUESTRING+1
	sta SYSTEM.VAL_03A7.S+1
	lda <RESULT
	sta SYSTEM.VAL_03A7.V
	lda >RESULT
	sta SYSTEM.VAL_03A7.V+1
	lda <CODE
	sta SYSTEM.VAL_03A7.CODE
	lda >CODE
	sta SYSTEM.VAL_03A7.CODE+1
	jsr SYSTEM.VAL_03A7
@exit

; ------------------------------------------------------------

adr.REC	= [DATAORIGIN+$2568] .array [33]
.var REC	= adr.REC .word
RESULT	= DATAORIGIN+$2589

@VarData	= REC
@VarDataSize	= 37

	rts						; ret
.endl

.local	PARSETABLE					; PROCEDURE

; optimize FAIL ('@print', heatmap.pas), line = 251

	@printEOL

; optimize FAIL ('@print', heatmap.pas), line = 252

	@printSTRING #CODEORIGIN+$0126
	@printEOL

; optimize FAIL ('@print', heatmap.pas), line = 253

	@printSTRING #CODEORIGIN+$0135
	@printEOL

; optimize OK (heatmap.pas), line = 255

	lda FREECHANNEL
	sta CIO.RSKIP.CHN
	lda #$00
	sta CIO.RSKIP.BUFFER
	lda #$80
	sta CIO.RSKIP.BUFFER+1
	jsr CIO.RSKIP

; optimize OK (heatmap.pas), line = 256

	lda FREECHANNEL
	sta CIO.RGET.CHN
	lda #$00
	sta CIO.RGET.BUFFER
	lda #$80
	sta CIO.RGET.BUFFER+1
	jsr CIO.RGET
	inx
	lda CIO.RGET.RESULT
	sta @move.src
	lda CIO.RGET.RESULT+1
	sta @move.src+1
	mwy TABLECOMMENT :bp2
	ldy #$00
	mva:rne (@move.src),y (:bp2),y+
	dex

; optimize OK (heatmap.pas), line = 260

	lda FREECHANNEL
	sta CIO.RGET.CHN
	lda #$00
	sta CIO.RGET.BUFFER
	lda #$80
	sta CIO.RGET.BUFFER+1
	jsr CIO.RGET
	inx
	lda CIO.RGET.RESULT
	sta @move.src
	lda CIO.RGET.RESULT+1
	sta @move.src+1
	mwy REC :bp2
	ldy #$00
	mva:rne (@move.src),y (:bp2),y+

; optimize FAIL ('cmpSTRING', heatmap.pas), line = 261

	mva REC :STACKORIGIN,x
	mva REC+1 :STACKORIGIN+STACKWIDTH,x
	inx
	mva #$54 :STACKORIGIN,x
	mva #$21 :STACKORIGIN+STACKWIDTH,x
	ldy #1
	jsr cmpSTRING
	bne @+
	dey
@
	dex
	dex
	tya
	jeq l_076D

; optimize FAIL ('@print', heatmap.pas), line = 262

	@printSTRING #CODEORIGIN+$015D
	@printEOL

; optimize OK (heatmap.pas), line = 263

	lda FREECHANNEL
	jsr CIO.CLS
	lda #$00
	jmp @halt
l_076D

; optimize OK (heatmap.pas), line = 267

	lda FREECHANNEL
	sta CIO.RGET.CHN
	lda #$00
	sta CIO.RGET.BUFFER
	lda #$80
	sta CIO.RGET.BUFFER+1
	jsr CIO.RGET
	inx
	lda CIO.RGET.RESULT
	sta @move.src
	lda CIO.RGET.RESULT+1
	sta @move.src+1
	mwy REC :bp2
	ldy #$00
	mva:rne (@move.src),y (:bp2),y+

; optimize FAIL ('CONVERTVALUE', heatmap.pas), line = 269

	mva REC :STACKORIGIN,x
	mva REC+1 :STACKORIGIN+STACKWIDTH,x
	jsr CONVERTVALUE
	lda CONVERTVALUE.RESULT
	sta NUMROWS
	lda CONVERTVALUE.RESULT+1
	sta NUMROWS+1
	lda CONVERTVALUE.RESULT+2
	sta NUMROWS+2
	lda CONVERTVALUE.RESULT+3
	sta NUMROWS+3

; optimize OK (heatmap.pas), line = 271

	lda FREECHANNEL
	sta CIO.RGET.CHN
	lda #$00
	sta CIO.RGET.BUFFER
	lda #$80
	sta CIO.RGET.BUFFER+1
	jsr CIO.RGET
	inx
	lda CIO.RGET.RESULT
	sta @move.src
	lda CIO.RGET.RESULT+1
	sta @move.src+1
	mwy ROWCOMMENT :bp2
	ldy #$00
	mva:rne (@move.src),y (:bp2),y+
	dex

; optimize FAIL ('@print', heatmap.pas), line = 273

	@printSTRING #CODEORIGIN+$017E
	inx
	mva NUMROWS :STACKORIGIN,x
	mva NUMROWS+1 :STACKORIGIN+STACKWIDTH,x
	mva NUMROWS+2 :STACKORIGIN+STACKWIDTH*2,x
	mva NUMROWS+3 :STACKORIGIN+STACKWIDTH*3,x
	jsr @printINT
	dex
	@printEOL

; optimize OK (heatmap.pas), line = 275

	.LOCAL
	lda NUMROWS+3
	sub #$00
	bne L4
	lda NUMROWS+2
	cmp #$00
	bne L1
	lda NUMROWS+1
	cmp #$00
	bne L1
	lda NUMROWS
	cmp #$28
L1	beq L5
	bcs L3
	lda #$FF
	bne L5
L3	lda #$01
	bne L5
L4	bvc L5
	eor #$FF
	ora #$01
L5
	.ENDL
	jmi l_07A2
	jeq l_07A2

; optimize FAIL ('@print', heatmap.pas), line = 276

	@printSTRING #CODEORIGIN+$0190
	@printEOL

; optimize OK (heatmap.pas), line = 277

	lda FREECHANNEL
	jsr CIO.CLS
	lda #$00
	jmp @halt
l_07A2

; optimize OK (heatmap.pas), line = 283

	lda FREECHANNEL
	sta CIO.RGET.CHN
	lda #$00
	sta CIO.RGET.BUFFER
	lda #$80
	sta CIO.RGET.BUFFER+1
	jsr CIO.RGET
	inx
	lda CIO.RGET.RESULT
	sta @move.src
	lda CIO.RGET.RESULT+1
	sta @move.src+1
	mwy REC :bp2
	ldy #$00
	mva:rne (@move.src),y (:bp2),y+

; optimize FAIL ('cmpSTRING', heatmap.pas), line = 284

	mva REC :STACKORIGIN,x
	mva REC+1 :STACKORIGIN+STACKWIDTH,x
	inx
	mva #$B3 :STACKORIGIN,x
	mva #$21 :STACKORIGIN+STACKWIDTH,x
	ldy #1
	jsr cmpSTRING
	bne @+
	dey
@
	dex
	dex
	tya
	jeq l_07C4

; optimize FAIL ('@print', heatmap.pas), line = 285

	@printSTRING #CODEORIGIN+$01BB
	@printEOL

; optimize OK (heatmap.pas), line = 286

	lda FREECHANNEL
	jsr CIO.CLS
	lda #$00
	jmp @halt
l_07C4

; optimize OK (heatmap.pas), line = 290

	lda FREECHANNEL
	sta CIO.RGET.CHN
	lda #$00
	sta CIO.RGET.BUFFER
	lda #$80
	sta CIO.RGET.BUFFER+1
	jsr CIO.RGET
	inx
	lda CIO.RGET.RESULT
	sta @move.src
	lda CIO.RGET.RESULT+1
	sta @move.src+1
	mwy REC :bp2
	ldy #$00
	mva:rne (@move.src),y (:bp2),y+

; optimize FAIL ('CONVERTVALUE', heatmap.pas), line = 292

	mva REC :STACKORIGIN,x
	mva REC+1 :STACKORIGIN+STACKWIDTH,x
	jsr CONVERTVALUE
	lda CONVERTVALUE.RESULT
	sta NUMCOLS
	lda CONVERTVALUE.RESULT+1
	sta NUMCOLS+1
	lda CONVERTVALUE.RESULT+2
	sta NUMCOLS+2
	lda CONVERTVALUE.RESULT+3
	sta NUMCOLS+3

; optimize OK (heatmap.pas), line = 294

	lda FREECHANNEL
	sta CIO.RGET.CHN
	lda #$00
	sta CIO.RGET.BUFFER
	lda #$80
	sta CIO.RGET.BUFFER+1
	jsr CIO.RGET
	inx
	lda CIO.RGET.RESULT
	sta @move.src
	lda CIO.RGET.RESULT+1
	sta @move.src+1
	mwy COLCOMMENT :bp2
	ldy #$00
	mva:rne (@move.src),y (:bp2),y+
	dex

; optimize FAIL ('@print', heatmap.pas), line = 296

	@printSTRING #CODEORIGIN+$01D9
	inx
	mva NUMCOLS :STACKORIGIN,x
	mva NUMCOLS+1 :STACKORIGIN+STACKWIDTH,x
	mva NUMCOLS+2 :STACKORIGIN+STACKWIDTH*2,x
	mva NUMCOLS+3 :STACKORIGIN+STACKWIDTH*3,x
	jsr @printINT
	dex
	@printEOL

; optimize OK (heatmap.pas), line = 298

	.LOCAL
	lda NUMROWS+3
	sub #$00
	bne L4
	lda NUMROWS+2
	cmp #$00
	bne L1
	lda NUMROWS+1
	cmp #$00
	bne L1
	lda NUMROWS
	cmp #$28
L1	beq L5
	bcs L3
	lda #$FF
	bne L5
L3	lda #$01
	bne L5
L4	bvc L5
	eor #$FF
	ora #$01
L5
	.ENDL
	jmi l_07F9
	jeq l_07F9

; optimize FAIL ('@print', heatmap.pas), line = 299

	@printSTRING #CODEORIGIN+$0190
	@printEOL

; optimize OK (heatmap.pas), line = 300

	lda FREECHANNEL
	jsr CIO.CLS
	lda #$00
	jmp @halt
l_07F9

; optimize OK (heatmap.pas), line = 306

	lda FREECHANNEL
	sta CIO.RGET.CHN
	lda #$00
	sta CIO.RGET.BUFFER
	lda #$80
	sta CIO.RGET.BUFFER+1
	jsr CIO.RGET
	inx
	lda CIO.RGET.RESULT
	sta @move.src
	lda CIO.RGET.RESULT+1
	sta @move.src+1
	mwy REC :bp2
	ldy #$00
	mva:rne (@move.src),y (:bp2),y+

; optimize FAIL ('cmpSTRING', heatmap.pas), line = 307

	mva REC :STACKORIGIN,x
	mva REC+1 :STACKORIGIN+STACKWIDTH,x
	inx
	mva #$EE :STACKORIGIN,x
	mva #$21 :STACKORIGIN+STACKWIDTH,x
	ldy #1
	jsr cmpSTRING
	bne @+
	dey
@
	dex
	dex
	tya
	jeq l_081B

; optimize FAIL ('@print', heatmap.pas), line = 308

	@printSTRING #CODEORIGIN+$01F4
	@printEOL

; optimize OK (heatmap.pas), line = 309

	lda FREECHANNEL
	jsr CIO.CLS
	lda #$00
	jmp @halt
l_081B

; optimize FAIL ('@print', heatmap.pas), line = 313

	@printSTRING #CODEORIGIN+$0212
	@printEOL

; optimize FAIL ('@print', heatmap.pas), line = 314

	@printEOL

; optimize FAIL ('@print', heatmap.pas), line = 315

	@printEOL

; optimize FAIL ('CRT.CURSOROFF', heatmap.pas), line = 317

	jsr CRT.CURSOROFF

; optimize OK (heatmap.pas), line = 319

	lda FREECHANNEL
	sta CIO.RSKIP.CHN
	lda #$00
	sta CIO.RSKIP.BUFFER
	lda #$80
	sta CIO.RSKIP.BUFFER+1
	jsr CIO.RSKIP

; optimize OK (heatmap.pas), line = 320

	lda FREECHANNEL
	sta CIO.RGET.CHN
	lda #$00
	sta CIO.RGET.BUFFER
	lda #$80
	sta CIO.RGET.BUFFER+1
	jsr CIO.RGET
	inx
	lda CIO.RGET.RESULT
	sta @move.src
	lda CIO.RGET.RESULT+1
	sta @move.src+1
	mwy DATACOMMENT :bp2
	ldy #$00
	mva:rne (@move.src),y (:bp2),y+
	dex

; optimize OK (heatmap.pas), line = 321

	lda FREECHANNEL
	sta CIO.RSKIP.CHN
	lda #$00
	sta CIO.RSKIP.BUFFER
	lda #$80
	sta CIO.RSKIP.BUFFER+1
	jsr CIO.RSKIP

; optimize OK (heatmap.pas), line = 323

	lda NUMROWS
	sta :ecx
	lda NUMROWS+1
	sta :ecx+1
	lda NUMCOLS
	sta :eax
	lda NUMCOLS+1
	sta :eax+1
	.ifdef fmulinit
	fmulu_16
	els
	imulCX
	eif
	lda :eax
	sta DATASIZE
	lda :eax+1
	sta DATASIZE+1

; optimize OK (heatmap.pas), line = 325

	lda #$01
	sta RECORDCOUNTER
	lda #$00
	sta RECORDCOUNTER+1

; optimize OK (heatmap.pas), line = 326

	sta RECORDSSKIPPED
	sta RECORDSSKIPPED+1

; optimize OK (heatmap.pas), line = 328

	sta COLITER
	ldy NUMROWS
	dey
	sty @FORTMP_0854_0

l_0857
; --- ForToDoCondition
	lda @FORTMP_0854_0:#$00
	cmp COLITER
	jcc l_0865

; optimize OK (heatmap.pas), line = 330

	lda FREECHANNEL
	sta CIO.RSKIP.CHN
	lda #$00
	sta CIO.RSKIP.BUFFER
	lda #$80
	sta CIO.RSKIP.BUFFER+1
	jsr CIO.RSKIP

; optimize OK (heatmap.pas), line = 332

	lda #$00
	sta ROWITER
	ldy NUMCOLS
	dey
	sty @FORTMP_0874_0

l_0877
; --- ForToDoCondition
	lda @FORTMP_0874_0:#$00
	cmp ROWITER
	jcc l_0885

; optimize FAIL ('@print', heatmap.pas), line = 334

	@printSTRING #CODEORIGIN+$0230
	lda RECORDCOUNTER
	ldy RECORDCOUNTER+1
	jsr @printWORD._ay
	@printSTRING #CODEORIGIN+$023A
	lda DATASIZE
	ldy DATASIZE+1
	jsr @printWORD._ay
	@printEOL

; optimize OK (heatmap.pas), line = 336

	lda FREECHANNEL
	sta CIO.RGET.CHN
	lda #$00
	sta CIO.RGET.BUFFER
	lda #$80
	sta CIO.RGET.BUFFER+1
	jsr CIO.RGET
	inx
	lda CIO.RGET.RESULT
	sta @move.src
	lda CIO.RGET.RESULT+1
	sta @move.src+1
	mwy REC :bp2
	ldy #$00
	mva:rne (@move.src),y (:bp2),y+
	dex

; optimize OK (heatmap.pas), line = 338

	lda adr.REC+$01
	cmp #$31
	jne l_08B1

; optimize OK (heatmap.pas), line = 339

	lda #$A4
	sta :ecx
	lda COLITER
	sta :eax
	.ifdef fmulinit
	fmulu_8
	els
	imulCL
	eif
	lda #$00
	sta :STACKORIGIN+STACKWIDTH+10
	lda ROWITER
	asl @
	rol :STACKORIGIN+STACKWIDTH+10
	asl @
	rol :STACKORIGIN+STACKWIDTH+10
	add :eax
	sta :STACKORIGIN+9
	lda :eax+1
	adc :STACKORIGIN+STACKWIDTH+10
	sta :STACKORIGIN+STACKWIDTH+9
	lda DATA
	add :STACKORIGIN+9
	sta :bp2
	lda DATA+1
	adc :STACKORIGIN+STACKWIDTH+9
	sta :bp2+1
	ldy #$00
	tya
	sta (:bp2),y
	iny
	sta (:bp2),y
	iny
	sta (:bp2),y
	iny
	sta (:bp2),y

; optimize FAIL (0, heatmap.pas), line = 340

	inc RECORDSSKIPPED
	sne
	inc RECORDSSKIPPED+1
	jmp l_08D0
l_08B1

; optimize FAIL (1, heatmap.pas), line = 342

	inx
	mva COLITER :STACKORIGIN,x
	inx
	mva #$A4 :STACKORIGIN,x
	jsr imulBYTE
	jsr movaBX_EAX
	mva ROWITER :STACKORIGIN,x
	mva #$00 :STACKORIGIN+STACKWIDTH,x
	mva #$00 :STACKORIGIN+STACKWIDTH,x
	m@index4 0
	jsr addAX_CX
	mva REC :STACKORIGIN,x
	mva REC+1 :STACKORIGIN+STACKWIDTH,x
	jsr CONVERTVALUE
	inx
	mva CONVERTVALUE.RESULT :STACKORIGIN,x
	mva CONVERTVALUE.RESULT+1 :STACKORIGIN+STACKWIDTH,x
	mva CONVERTVALUE.RESULT+2 :STACKORIGIN+STACKWIDTH*2,x
	mva CONVERTVALUE.RESULT+3 :STACKORIGIN+STACKWIDTH*3,x
	lda DATA
	add :STACKORIGIN-1,x
	sta :bp2
	lda DATA+1
	adc :STACKORIGIN-1+STACKWIDTH,x
	sta :bp2+1
	ldy #$00
	lda :STACKORIGIN,x
	sta (:bp2),y
	iny
	lda :STACKORIGIN+STACKWIDTH,x
	sta (:bp2),y
	iny
	lda :STACKORIGIN+STACKWIDTH*2,x
	sta (:bp2),y
	iny
	lda :STACKORIGIN+STACKWIDTH*3,x
	sta (:bp2),y
	dex
	dex
l_08D0

; optimize FAIL (0, heatmap.pas), line = 345

	inc RECORDCOUNTER
	sne
	inc RECORDCOUNTER+1

; optimize OK (heatmap.pas), line = 347

	lda FREECHANNEL
	sta CIO.RSKIP.CHN
	lda #$00
	sta CIO.RSKIP.BUFFER
	lda #$80
	sta CIO.RSKIP.BUFFER+1
	jsr CIO.RSKIP

; --- ForToDoEpilog
	inc ROWITER
	jne l_0877
l_0885

; optimize OK (heatmap.pas), line = 351

	lda FREECHANNEL
	sta CIO.RSKIP.CHN
	lda #$00
	sta CIO.RSKIP.BUFFER
	lda #$80
	sta CIO.RSKIP.BUFFER+1
	jsr CIO.RSKIP

; --- ForToDoEpilog
	inc COLITER
	jne l_0857
l_0865

; optimize FAIL ('@print', heatmap.pas), line = 355

	@printSTRING #CODEORIGIN+$0240
	@printEOL

; optimize OK (heatmap.pas), line = 359

	lda FREECHANNEL
	jsr CIO.CLS

; optimize OK (heatmap.pas), line = 361

	lda RECORDSSKIPPED+1
	ora RECORDSSKIPPED
	jeq l_0913
	@printSTRING #CODEORIGIN+$0259
	lda RECORDSSKIPPED
	ldy RECORDSSKIPPED+1
	jsr @printWORD._ay
	@printEOL
l_0913

; optimize FAIL ('CRT.CURSORON', heatmap.pas), line = 363

	jsr CRT.CURSORON

; ------------------------------------------------------------

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	CALCULATEHEATMAP				; PROCEDURE

; optimize FAIL ('@print', heatmap.pas), line = 377

	@printSTRING #CODEORIGIN+$027C
	@printEOL

; optimize OK (heatmap.pas), line = 379

	lda #$00
	sta DATAMAX
	sta DATAMAX+1
	sta DATAMAX+2
	lda #$80
	sta DATAMAX+3

; optimize OK (heatmap.pas), line = 380

	lda #$FF
	sta DATAMIN
	sta DATAMIN+1
	sta DATAMIN+2
	lda #$7F
	sta DATAMIN+3

; optimize OK (heatmap.pas), line = 382

	lda #$00
	sta ROWITER
	ldy NUMROWS
	dey
	sty @FORTMP_093A_0

l_093D
; --- ForToDoCondition
	lda @FORTMP_093A_0:#$00
	cmp ROWITER
	jcc l_094B

; optimize OK (heatmap.pas), line = 384

	lda #$00
	sta COLITER
	ldy NUMCOLS
	dey
	sty @FORTMP_0955_0

l_0958
; --- ForToDoCondition
	lda @FORTMP_0955_0:#$00
	cmp COLITER
	jcc l_0966

; optimize OK (heatmap.pas), line = 386

	lda #$A4
	sta :ecx
	lda ROWITER
	sta :eax
	.ifdef fmulinit
	fmulu_8
	els
	imulCL
	eif
	lda #$00
	sta :STACKORIGIN+STACKWIDTH+10
	lda COLITER
	asl @
	rol :STACKORIGIN+STACKWIDTH+10
	asl @
	rol :STACKORIGIN+STACKWIDTH+10
	add :eax
	sta :STACKORIGIN+9
	lda :eax+1
	adc :STACKORIGIN+STACKWIDTH+10
	sta :STACKORIGIN+STACKWIDTH+9
	lda DATA
	add :STACKORIGIN+9
	sta :bp2
	lda DATA+1
	adc :STACKORIGIN+STACKWIDTH+9
	sta :bp2+1
	ldy #$00
	lda (:bp2),y
	sta :STACKORIGIN+9
	iny
	lda (:bp2),y
	sta :STACKORIGIN+STACKWIDTH+9
	iny
	lda (:bp2),y
	sta :STACKORIGIN+STACKWIDTH*2+9
	iny
	.LOCAL
	lda (:bp2),y
	sub DATAMAX+3
	bne L4
	lda :STACKORIGIN+STACKWIDTH*2+9
	cmp DATAMAX+2
	bne L1
	lda :STACKORIGIN+STACKWIDTH+9
	cmp DATAMAX+1
	bne L1
	lda :STACKORIGIN+9
	cmp DATAMAX
L1	beq L5
	bcs L3
	lda #$FF
	bne L5
L3	lda #$01
	bne L5
L4	bvc L5
	eor #$FF
	ora #$01
L5
	.ENDL
	jmi l_0983
	jeq l_0983

; optimize OK (heatmap.pas), line = 387

	lda #$A4
	sta :ecx
	lda ROWITER
	sta :eax
	.ifdef fmulinit
	fmulu_8
	els
	imulCL
	eif
	lda #$00
	sta :STACKORIGIN+STACKWIDTH+10
	lda COLITER
	asl @
	rol :STACKORIGIN+STACKWIDTH+10
	asl @
	rol :STACKORIGIN+STACKWIDTH+10
	add :eax
	sta :STACKORIGIN+9
	lda :eax+1
	adc :STACKORIGIN+STACKWIDTH+10
	sta :STACKORIGIN+STACKWIDTH+9
	lda DATA
	add :STACKORIGIN+9
	sta :bp2
	lda DATA+1
	adc :STACKORIGIN+STACKWIDTH+9
	sta :bp2+1
	ldy #$00
	lda (:bp2),y
	sta DATAMAX
	iny
	lda (:bp2),y
	sta DATAMAX+1
	iny
	lda (:bp2),y
	sta DATAMAX+2
	iny
	lda (:bp2),y
	sta DATAMAX+3
l_0983

; optimize OK (heatmap.pas), line = 389

	lda #$A4
	sta :ecx
	lda ROWITER
	sta :eax
	.ifdef fmulinit
	fmulu_8
	els
	imulCL
	eif
	lda #$00
	sta :STACKORIGIN+STACKWIDTH+10
	lda COLITER
	asl @
	rol :STACKORIGIN+STACKWIDTH+10
	asl @
	rol :STACKORIGIN+STACKWIDTH+10
	add :eax
	sta :STACKORIGIN+9
	lda :eax+1
	adc :STACKORIGIN+STACKWIDTH+10
	sta :STACKORIGIN+STACKWIDTH+9
	lda DATA
	add :STACKORIGIN+9
	sta :bp2
	lda DATA+1
	adc :STACKORIGIN+STACKWIDTH+9
	sta :bp2+1
	ldy #$00
	lda (:bp2),y
	sta :STACKORIGIN+9
	iny
	lda (:bp2),y
	sta :STACKORIGIN+STACKWIDTH+9
	iny
	lda (:bp2),y
	sta :STACKORIGIN+STACKWIDTH*2+9
	iny
	.LOCAL
	lda (:bp2),y
	sub DATAMIN+3
	bne L4
	lda :STACKORIGIN+STACKWIDTH*2+9
	cmp DATAMIN+2
	bne L1
	lda :STACKORIGIN+STACKWIDTH+9
	cmp DATAMIN+1
	bne L1
	lda :STACKORIGIN+9
	cmp DATAMIN
L1	beq L5
	bcs L3
	lda #$FF
	bne L5
L3	lda #$01
	bne L5
L4	bvc L5
	eor #$FF
	ora #$01
L5
	.ENDL
	jpl l_09B4

; optimize OK (heatmap.pas), line = 390

	lda #$A4
	sta :ecx
	lda ROWITER
	sta :eax
	.ifdef fmulinit
	fmulu_8
	els
	imulCL
	eif
	lda #$00
	sta :STACKORIGIN+STACKWIDTH+10
	lda COLITER
	asl @
	rol :STACKORIGIN+STACKWIDTH+10
	asl @
	rol :STACKORIGIN+STACKWIDTH+10
	add :eax
	sta :STACKORIGIN+9
	lda :eax+1
	adc :STACKORIGIN+STACKWIDTH+10
	sta :STACKORIGIN+STACKWIDTH+9
	lda DATA
	add :STACKORIGIN+9
	sta :bp2
	lda DATA+1
	adc :STACKORIGIN+STACKWIDTH+9
	sta :bp2+1
	ldy #$00
	lda (:bp2),y
	sta DATAMIN
	iny
	lda (:bp2),y
	sta DATAMIN+1
	iny
	lda (:bp2),y
	sta DATAMIN+2
	iny
	lda (:bp2),y
	sta DATAMIN+3
l_09B4

; --- ForToDoEpilog
	inc COLITER
	jne l_0958
l_0966

; --- ForToDoEpilog
	inc ROWITER
	jne l_093D
l_094B

; optimize FAIL ('@print', heatmap.pas), line = 397

	@printSTRING #CODEORIGIN+$029E
	inx
	mva DATAMAX :STACKORIGIN,x
	mva DATAMAX+1 :STACKORIGIN+STACKWIDTH,x
	mva DATAMAX+2 :STACKORIGIN+STACKWIDTH*2,x
	mva DATAMAX+3 :STACKORIGIN+STACKWIDTH*3,x
	jsr @printINT
	dex
	@printSTRING #CODEORIGIN+$02A5
	inx
	mva DATAMIN :STACKORIGIN,x
	mva DATAMIN+1 :STACKORIGIN+STACKWIDTH,x
	mva DATAMIN+2 :STACKORIGIN+STACKWIDTH*2,x
	mva DATAMIN+3 :STACKORIGIN+STACKWIDTH*3,x
	jsr @printINT
	dex
	@printEOL

; optimize FAIL ('@print', heatmap.pas), line = 398

	@printEOL

; optimize OK (heatmap.pas), line = 400

	.LOCAL
	lda DATAMAX+3
	sub #$00
	bne L4
	lda DATAMAX+2
	cmp #$00
	bne L1
	lda DATAMAX+1
	cmp #$00
	bne L1
	lda DATAMAX
	cmp #$0E
L1	beq L5
	bcs L3
	lda #$FF
	bne L5
L3	lda #$01
	bne L5
L4	bvc L5
	eor #$FF
	ora #$01
L5
	.ENDL
	seq
	bpl @+
	jmp *+6
@	jmp l_09FEx
	lda DATAMIN+3
	jpl l_09FE
l_09FEx

; optimize FAIL ('@print', heatmap.pas), line = 402

	@printSTRING #CODEORIGIN+$02AD
	@printEOL

; optimize FAIL ('@print', heatmap.pas), line = 406

	@printSTRING #CODEORIGIN+$02C7
	@printEOL

; optimize FAIL ('@print', heatmap.pas), line = 407

	@printSTRING #CODEORIGIN+$02EA
	@printEOL

; optimize OK (heatmap.pas), line = 411

	lda DATAMAX
	sub DATAMIN
	sta INPUTRANGE
	lda DATAMAX+1
	sbc DATAMIN+1
	sta INPUTRANGE+1
	lda DATAMAX+2
	sbc DATAMIN+2
	sta INPUTRANGE+2
	lda DATAMAX+3
	sbc DATAMIN+3
	sta INPUTRANGE+3

; optimize OK (heatmap.pas), line = 413

	lda #$00
	sta ROWITER
	ldy NUMROWS
	dey
	sty @FORTMP_0A1A_0

l_0A1D
; --- ForToDoCondition
	lda @FORTMP_0A1A_0:#$00
	cmp ROWITER
	jcc l_0A2B

; optimize OK (heatmap.pas), line = 415

	lda #$00
	sta COLITER
	ldy NUMCOLS
	dey
	sty @FORTMP_0A35_0

l_0A38
; --- ForToDoCondition
	lda @FORTMP_0A35_0:#$00
	cmp COLITER
	jcc l_0A46

; optimize FAIL ('divmulINT.REAL', heatmap.pas), line = 419

	inx
	mva ROWITER :STACKORIGIN,x
	inx
	mva #$A4 :STACKORIGIN,x
	jsr imulBYTE
	jsr movaBX_EAX
	mva COLITER :STACKORIGIN,x
	mva #$00 :STACKORIGIN+STACKWIDTH,x
	mva #$00 :STACKORIGIN+STACKWIDTH,x
	m@index4 0
	jsr addAX_CX
	mva #$00 :STACKORIGIN,x
	mva #$0E :STACKORIGIN+STACKWIDTH,x
	mva #$00 :STACKORIGIN+STACKWIDTH*2,x
	mva #$00 :STACKORIGIN+STACKWIDTH*3,x
	inx
	mva INPUTRANGE :STACKORIGIN,x
	mva INPUTRANGE+1 :STACKORIGIN+STACKWIDTH,x
	mva INPUTRANGE+2 :STACKORIGIN+STACKWIDTH*2,x
	mva INPUTRANGE+3 :STACKORIGIN+STACKWIDTH*3,x
	jsr @expandToREAL
	jsr divmulINT.REAL
	mva ROWITER :STACKORIGIN,x
	mva #$00 :STACKORIGIN+STACKWIDTH,x
	inx
	mva #$A4 :STACKORIGIN,x
	mva #$00 :STACKORIGIN+STACKWIDTH,x
	jsr imulWORD
	jsr movaBX_EAX
	mva COLITER :STACKORIGIN,x
	mva #$00 :STACKORIGIN+STACKWIDTH,x
	mva #$00 :STACKORIGIN+STACKWIDTH,x
	m@index4 0
	jsr addAX_CX
	dex
	lda DATA
	add :STACKORIGIN,x
	sta :bp2
	lda DATA+1
	adc :STACKORIGIN+STACKWIDTH,x
	sta :bp2+1
	ldy #$00
	mva (:bp2),y :STACKORIGIN,x
	iny
	mva (:bp2),y :STACKORIGIN+STACKWIDTH,x
	iny
	mva (:bp2),y :STACKORIGIN+STACKWIDTH*2,x
	iny
	mva (:bp2),y :STACKORIGIN+STACKWIDTH*3,x
	inx
	mva DATAMIN :STACKORIGIN,x
	mva DATAMIN+1 :STACKORIGIN+STACKWIDTH,x
	mva DATAMIN+2 :STACKORIGIN+STACKWIDTH*2,x
	mva DATAMIN+3 :STACKORIGIN+STACKWIDTH*3,x
	jsr subEAX_ECX
	dex
	jsr @expandToREAL
	lda :STACKORIGIN,x
	sta @REAL_MUL.B
	lda :STACKORIGIN+STACKWIDTH,x
	sta @REAL_MUL.B+1
	lda :STACKORIGIN+STACKWIDTH*2,x
	sta @REAL_MUL.B+2
	lda :STACKORIGIN+STACKWIDTH*3,x
	sta @REAL_MUL.B+3
	lda :STACKORIGIN-1,x
	sta @REAL_MUL.A
	lda :STACKORIGIN-1+STACKWIDTH,x
	sta @REAL_MUL.A+1
	lda :STACKORIGIN-1+STACKWIDTH*2,x
	sta @REAL_MUL.A+2
	lda :STACKORIGIN-1+STACKWIDTH*3,x
	sta @REAL_MUL.A+3
	jsr @REAL_MUL
	dex
	lda @REAL_MUL.RESULT
	sta @REAL_ROUND.A
	lda @REAL_MUL.RESULT+1
	sta @REAL_ROUND.A+1
	lda @REAL_MUL.RESULT+2
	sta @REAL_ROUND.A+2
	lda @REAL_MUL.RESULT+3
	sta @REAL_ROUND.A+3
	jsr @REAL_ROUND
	lda @REAL_ROUND.RESULT
	sta :STACKORIGIN,x
	lda @REAL_ROUND.RESULT+1
	sta :STACKORIGIN+STACKWIDTH,x
	lda @REAL_ROUND.RESULT+2
	sta :STACKORIGIN+STACKWIDTH*2,x
	lda @REAL_ROUND.RESULT+3
	sta :STACKORIGIN+STACKWIDTH*3,x
	lda DATA
	add :STACKORIGIN-1,x
	sta :bp2
	lda DATA+1
	adc :STACKORIGIN-1+STACKWIDTH,x
	sta :bp2+1
	ldy #$00
	lda :STACKORIGIN,x
	sta (:bp2),y
	iny
	lda :STACKORIGIN+STACKWIDTH,x
	sta (:bp2),y
	iny
	lda :STACKORIGIN+STACKWIDTH*2,x
	sta (:bp2),y
	iny
	lda :STACKORIGIN+STACKWIDTH*3,x
	sta (:bp2),y
	dex
	dex

; --- ForToDoEpilog
	inc COLITER
	jne l_0A38
l_0A46

; --- ForToDoEpilog
	inc ROWITER
	jne l_0A1D
l_0A2B
l_09FE

; optimize FAIL ('@print', heatmap.pas), line = 427

	@printSTRING #CODEORIGIN+$02F8
	@printEOL

; optimize FAIL ('@print', heatmap.pas), line = 428

	@printSTRING #CODEORIGIN+$0311
	@printEOL

; --- RepeatUntilProlog
l_0A86

; optimize FAIL ('CRT.KEYPRESSED', heatmap.pas), line = 430

	jsr CRT.KEYPRESSED
	lda CRT.KEYPRESSED.RESULT
	jeq l_0A86

; optimize FAIL ('CLEARKEYS', heatmap.pas), line = 432

	jsr CLEARKEYS

; ------------------------------------------------------------

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl

.local	DISPLAYHEATMAP					; PROCEDURE

; optimize OK (heatmap.pas), line = 446

	lda #$0B
	jsr GRAPH.INITGRAPH_0517

; optimize FAIL ('divmulINT.DIV', heatmap.pas), line = 450

	inx
	mva #$50 :STACKORIGIN,x
	inx
	mva NUMCOLS :STACKORIGIN,x
	mva NUMCOLS+1 :STACKORIGIN+STACKWIDTH,x
	mva NUMCOLS+2 :STACKORIGIN+STACKWIDTH*2,x
	mva NUMCOLS+3 :STACKORIGIN+STACKWIDTH*3,x
	mva #$00 :STACKORIGIN-1+STACKWIDTH,x
	mva #$00 :STACKORIGIN-1+STACKWIDTH*2,x
	mva #$00 :STACKORIGIN-1+STACKWIDTH*3,x
	jsr subEAX_ECX
	mva #$02 :STACKORIGIN,x
	mva #$00 :STACKORIGIN+STACKWIDTH,x
	mva #$00 :STACKORIGIN+STACKWIDTH*2,x
	mva #$00 :STACKORIGIN+STACKWIDTH*3,x
	jsr divmulINT.DIV
	dex
	lda :STACKORIGIN,x
	sta XMARGIN

; optimize FAIL ('divmulINT.DIV', heatmap.pas), line = 454

	mva #$50 :STACKORIGIN,x
	inx
	mva NUMROWS :STACKORIGIN,x
	mva NUMROWS+1 :STACKORIGIN+STACKWIDTH,x
	mva NUMROWS+2 :STACKORIGIN+STACKWIDTH*2,x
	mva NUMROWS+3 :STACKORIGIN+STACKWIDTH*3,x
	mva #$00 :STACKORIGIN-1+STACKWIDTH,x
	mva #$00 :STACKORIGIN-1+STACKWIDTH*2,x
	mva #$00 :STACKORIGIN-1+STACKWIDTH*3,x
	jsr subEAX_ECX
	mva #$02 :STACKORIGIN,x
	mva #$00 :STACKORIGIN+STACKWIDTH,x
	mva #$00 :STACKORIGIN+STACKWIDTH*2,x
	mva #$00 :STACKORIGIN+STACKWIDTH*3,x
	jsr divmulINT.DIV
	dex
	lda :STACKORIGIN,x
	sta YMARGIN
	dex

; optimize OK (heatmap.pas), line = 456

	lda #$00
	sta ROWITER
	ldy NUMROWS
	dey
	sty @FORTMP_0AB8_0

l_0ABB
; --- ForToDoCondition
	lda @FORTMP_0AB8_0:#$00
	cmp ROWITER
	jcc l_0AC9

; optimize OK (heatmap.pas), line = 458

	lda #$00
	sta COLITER
	ldy NUMCOLS
	dey
	sty @FORTMP_0AD3_0

l_0AD6
; --- ForToDoCondition
	lda @FORTMP_0AD3_0:#$00
	cmp COLITER
	jcc l_0AE4

; optimize OK (heatmap.pas), line = 460

	lda #$A4
	sta :ecx
	lda ROWITER
	sta :eax
	.ifdef fmulinit
	fmulu_8
	els
	imulCL
	eif
	lda #$00
	sta :STACKORIGIN+STACKWIDTH+10
	lda COLITER
	asl @
	rol :STACKORIGIN+STACKWIDTH+10
	asl @
	rol :STACKORIGIN+STACKWIDTH+10
	add :eax
	sta :STACKORIGIN+9
	lda :eax+1
	adc :STACKORIGIN+STACKWIDTH+10
	sta :STACKORIGIN+STACKWIDTH+9
	lda DATA
	add :STACKORIGIN+9
	sta :bp2
	lda DATA+1
	adc :STACKORIGIN+STACKWIDTH+9
	sta :bp2+1
	ldy #$00
	lda (:bp2),y
	sta :STACKORIGIN+9
	iny
	lda (:bp2),y
	sta :STACKORIGIN+STACKWIDTH+9
	iny
	lda :STACKORIGIN+9
	add #$00
	tay
	lda :STACKORIGIN+STACKWIDTH+9
	adc #$00
	sta :STACKORIGIN+STACKWIDTH+9
	lda adr.COLORSTAB,y
	jsr GRAPH.SETCOLOR

; optimize OK (heatmap.pas), line = 461

	lda COLITER
	add XMARGIN
	sta GRAPH.PUTPIXEL_0521.X
	lda #$00
	adc #$00
	sta GRAPH.PUTPIXEL_0521.X+1
	lda YMARGIN
	sta GRAPH.PUTPIXEL_0521.Y
	lda #$00
	sta GRAPH.PUTPIXEL_0521.Y+1
	jsr GRAPH.PUTPIXEL_0521

; optimize OK (heatmap.pas), line = 462

	lda YMARGIN
	add #$01
	sta GRAPH.PUTPIXEL_0521.Y
	lda #$00
	adc #$00
	sta GRAPH.PUTPIXEL_0521.Y+1
	lda COLITER
	add XMARGIN
	sta GRAPH.PUTPIXEL_0521.X
	lda #$00
	adc #$00
	sta GRAPH.PUTPIXEL_0521.X+1
	jsr GRAPH.PUTPIXEL_0521

; optimize OK (heatmap.pas), line = 463

	lda YMARGIN
	add #$02
	sta GRAPH.PUTPIXEL_0521.Y
	lda #$00
	adc #$00
	sta GRAPH.PUTPIXEL_0521.Y+1
	lda COLITER
	add XMARGIN
	sta GRAPH.PUTPIXEL_0521.X
	lda #$00
	adc #$00
	sta GRAPH.PUTPIXEL_0521.X+1
	jsr GRAPH.PUTPIXEL_0521

; optimize OK (heatmap.pas), line = 464

	lda YMARGIN
	add #$03
	sta GRAPH.PUTPIXEL_0521.Y
	lda #$00
	adc #$00
	sta GRAPH.PUTPIXEL_0521.Y+1
	lda COLITER
	add XMARGIN
	sta GRAPH.PUTPIXEL_0521.X
	lda #$00
	adc #$00
	sta GRAPH.PUTPIXEL_0521.X+1
	jsr GRAPH.PUTPIXEL_0521

; --- ForToDoEpilog
	inc COLITER
	jne l_0AD6
l_0AE4

; optimize OK (heatmap.pas), line = 468

	lda YMARGIN
	add #$04
	sta YMARGIN

; --- ForToDoEpilog
	inc ROWITER
	jne l_0ABB
l_0AC9

; --- RepeatUntilProlog
l_0B4B

; optimize FAIL ('CRT.KEYPRESSED', heatmap.pas), line = 473

	jsr CRT.KEYPRESSED
	lda CRT.KEYPRESSED.RESULT
	jeq l_0B4B

; optimize FAIL ('CLEARKEYS', heatmap.pas), line = 475

	jsr CLEARKEYS
	lda #$01
	sta SYSTEM.PAUSE_03DD.N
	lda #$00
	sta SYSTEM.PAUSE_03DD.N+1
	jsr SYSTEM.PAUSE_03DD

; ------------------------------------------------------------

@exit
	.ifdef @new
	lda <@VarData
	sta :ztmp
	lda >@VarData
	ldy #@VarDataSize-1
	jmp @FreeMem
	els
	rts						; ret
	eif
.endl
l_037A

; optimize FAIL ('@print', heatmap.pas), line = 482

	@printEOL

; optimize FAIL ('@print', heatmap.pas), line = 483

	@printSTRING #CODEORIGIN+$0337
	@printEOL

; optimize FAIL ('@print', heatmap.pas), line = 484

	@printSTRING #CODEORIGIN+$035A
	@printEOL

; optimize FAIL ('@print', heatmap.pas), line = 485

	@printEOL

; --- RepeatUntilProlog
l_0B5B

; optimize FAIL ('OPENFILE', heatmap.pas), line = 489

	jsr OPENFILE

; optimize FAIL ('PARSETABLE', heatmap.pas), line = 490

	jsr PARSETABLE

; optimize FAIL ('CALCULATEHEATMAP', heatmap.pas), line = 491

	jsr CALCULATEHEATMAP

; optimize FAIL ('DISPLAYHEATMAP', heatmap.pas), line = 492

	jsr DISPLAYHEATMAP

; optimize OK (heatmap.pas), line = 494

	lda USEREXITS
	jeq l_0B5B
	lda #$00
	jmp @halt

; ------------------------------------------------------------

RECORD_BUFFER	= $8000
TEXT_BUFFER	= $9000
CODE	= DATAORIGIN+$058E
adr.REC	= [DATAORIGIN+$058F] .array [256]
.var REC	= adr.REC .word
FREECHANNEL	= DATAORIGIN+$068F
adr.FILENAME	= [DATAORIGIN+$0690] .array [17]
.var FILENAME	= adr.FILENAME .word
adr.TABLECOMMENT	= [DATAORIGIN+$06A1] .array [256]
.var TABLECOMMENT	= adr.TABLECOMMENT .word
adr.COLCOMMENT	= [DATAORIGIN+$07A1] .array [256]
.var COLCOMMENT	= adr.COLCOMMENT .word
adr.ROWCOMMENT	= [DATAORIGIN+$08A1] .array [256]
.var ROWCOMMENT	= adr.ROWCOMMENT .word
adr.DATACOMMENT	= [DATAORIGIN+$09A1] .array [256]
.var DATACOMMENT	= adr.DATACOMMENT .word
NUMROWS	= DATAORIGIN+$0AA1
NUMCOLS	= DATAORIGIN+$0AA5
COMMAPOS	= DATAORIGIN+$0AA9
adr.VALUESTRING	= [DATAORIGIN+$0AAA] .array [11]
.var VALUESTRING	= adr.VALUESTRING .word
DATASIZE	= DATAORIGIN+$0AB5
RECORDCOUNTER	= DATAORIGIN+$0AB7
RECORDSSKIPPED	= DATAORIGIN+$0AB9
DATAMAX	= DATAORIGIN+$0ABB
DATAMIN	= DATAORIGIN+$0ABF
ROWITER	= DATAORIGIN+$0AC3
COLITER	= DATAORIGIN+$0AC4
INPUTRANGE	= DATAORIGIN+$0AC5
XMARGIN	= DATAORIGIN+$0AC9
YMARGIN	= DATAORIGIN+$0ACA
adr.DATA	= [DATAORIGIN+$0ACB] .array [41] [41] .dword
.var DATA	= adr.DATA .word
adr.COLORSTAB	= [DATAORIGIN+$250F] .array [15]
.var COLORSTAB	= adr.COLORSTAB .word
CH	= $02FC
KEY	= DATAORIGIN+$251E
CIORESULT	= DATAORIGIN+$251F
USEREXITS	= DATAORIGIN+$2520
@exit

@halt	ldx #$00
	txs
	.ifdef MAIN.@DEFINES.ROMOFF
	inc portb
	.fi

	ldy #$01

	rts

; ------------------------------------------------------------

IOCB@COPY	:16 brk

; ------------------------------------------------------------

.local	@DEFINES
ATARI
.endl

.local	@RESOURCE
.endl

.endl							; MAIN

; ------------------------------------------------------------
; ------------------------------------------------------------

.macro	UNITINITIALIZATION

	.ifdef MAIN.SYSTEM.@UnitInit
	jsr MAIN.SYSTEM.@UnitInit
	.fi

	.ifdef MAIN.ATARI.@UnitInit
	jsr MAIN.ATARI.@UnitInit
	.fi

	.ifdef MAIN.CRT.@UnitInit
	jsr MAIN.CRT.@UnitInit
	.fi

	.ifdef MAIN.CIO.@UnitInit
	jsr MAIN.CIO.@UnitInit
	.fi

	.ifdef MAIN.STRINGUTILS.@UnitInit
	jsr MAIN.STRINGUTILS.@UnitInit
	.fi

	.ifdef MAIN.TYPES.@UnitInit
	jsr MAIN.TYPES.@UnitInit
	.fi

	.ifdef MAIN.GRAPH.@UnitInit
	jsr MAIN.GRAPH.@UnitInit
	.fi

	.ifdef MAIN.DOS.@UnitInit
	jsr MAIN.DOS.@UnitInit
	.fi

	.ifdef MAIN.STRUTILS.@UnitInit
	jsr MAIN.STRUTILS.@UnitInit
	.fi

	.ifdef MAIN.SYSUTILS.@UnitInit
	jsr MAIN.SYSUTILS.@UnitInit
	.fi
.endm

; ------------------------------------------------------------

	ift .SIZEOF(MAIN.SYSTEM) > 0
	.print 'SYSTEM: ',MAIN.SYSTEM,'..',MAIN.SYSTEM+.SIZEOF(MAIN.SYSTEM)-1
	eif

	ift .SIZEOF(MAIN.ATARI) > 0
	.print 'ATARI: ',MAIN.ATARI,'..',MAIN.ATARI+.SIZEOF(MAIN.ATARI)-1
	eif

	ift .SIZEOF(MAIN.CRT) > 0
	.print 'CRT: ',MAIN.CRT,'..',MAIN.CRT+.SIZEOF(MAIN.CRT)-1
	eif

	ift .SIZEOF(MAIN.CIO) > 0
	.print 'CIO: ',MAIN.CIO,'..',MAIN.CIO+.SIZEOF(MAIN.CIO)-1
	eif

	ift .SIZEOF(MAIN.STRINGUTILS) > 0
	.print 'STRINGUTILS: ',MAIN.STRINGUTILS,'..',MAIN.STRINGUTILS+.SIZEOF(MAIN.STRINGUTILS)-1
	eif

	ift .SIZEOF(MAIN.TYPES) > 0
	.print 'TYPES: ',MAIN.TYPES,'..',MAIN.TYPES+.SIZEOF(MAIN.TYPES)-1
	eif

	ift .SIZEOF(MAIN.GRAPH) > 0
	.print 'GRAPH: ',MAIN.GRAPH,'..',MAIN.GRAPH+.SIZEOF(MAIN.GRAPH)-1
	eif

	ift .SIZEOF(MAIN.DOS) > 0
	.print 'DOS: ',MAIN.DOS,'..',MAIN.DOS+.SIZEOF(MAIN.DOS)-1
	eif

	ift .SIZEOF(MAIN.STRUTILS) > 0
	.print 'STRUTILS: ',MAIN.STRUTILS,'..',MAIN.STRUTILS+.SIZEOF(MAIN.STRUTILS)-1
	eif

	ift .SIZEOF(MAIN.SYSUTILS) > 0
	.print 'SYSUTILS: ',MAIN.SYSUTILS,'..',MAIN.SYSUTILS+.SIZEOF(MAIN.SYSUTILS)-1
	eif

	.print 'CODE: ',CODEORIGIN,'..',MAIN.@RESOURCE-1

; ------------------------------------------------------------

	.align $0004

DATAORIGIN
.by  $28 $00 $18 $00 $2D $0C $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $27 $00 $00
.by  $00 $17 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00  $00 $00 $00 $00 $00 $00 $00 $00
.by  $00 $00 $00 $00 $00 $00 $00 $07  $08 $09 $0A $0B $0C $0D $0E $0F  $01 $02 $03 $04 $05 $06

VARINITSIZE	= *-DATAORIGIN
VARDATASIZE	= 9621

PROGRAMSTACK	= DATAORIGIN+VARDATASIZE

	.print 'DATA: ',DATAORIGIN,'..',PROGRAMSTACK

	run START

; ------------------------------------------------------------

.macro	STATICDATA
.by  $00 $00 $04 $54 $52 $55 $45 $00  $05 $46 $41 $4C $53 $45 $00 $24  $45 $6E $74 $65 $72 $20 $66 $69
.by  $6C $65 $6E $61 $6D $65 $20 $28  $65 $67 $2E $20 $44 $3A $46 $49  $4C $45 $4E $41 $4D $45 $2E $44
.by  $49 $46 $29 $2E $00 $23 $45 $6E  $74 $65 $72 $20 $2A $20 $66 $6F  $72 $20 $6C $69 $73 $74 $20 $6F
.by  $66 $20 $73 $75 $70 $70 $6F $72  $74 $65 $64 $20 $66 $69 $6C $65  $73 $00 $15 $69 $6E $20 $63 $75
.by  $72 $72 $65 $6E $74 $20 $64 $69  $72 $65 $63 $74 $6F $72 $79 $2E  $00 $1A $50 $72 $65 $73 $73 $20
.by  $C2 $D2 $C5 $C1 $CB $20 $74 $6F  $20 $65 $78 $69 $74 $20 $74 $6F  $20 $44 $4F $53 $00 $18 $42 $72
.by  $65 $61 $6B $20 $70 $72 $65 $73  $73 $65 $64 $2E $20 $41 $62 $6F  $72 $74 $69 $6E $67 $2E $00 $12
.by  $52 $65 $61 $64 $69 $6E $67 $20  $64 $69 $72 $65 $63 $74 $6F $72  $79 $2E $00 $07 $44 $3A $2A $2E
.by  $44 $49 $46 $00 $02 $44 $3A $00  $22 $54 $6F $6F $20 $6D $61 $6E  $79 $20 $6F $70 $65 $6E $20 $64
.by  $69 $73 $6B $20 $66 $69 $6C $65  $73 $2E $20 $41 $62 $6F $72 $74  $69 $6E $67 $00 $0F $46 $69 $6C
.by  $65 $20 $6E $6F $74 $20 $66 $6F  $75 $6E $64 $2E $00 $05 $54 $41  $42 $4C $45 $00 $20 $54 $68 $69
.by  $73 $20 $69 $73 $20 $6E $6F $74  $20 $61 $20 $44 $49 $46 $20 $66  $69 $6C $65 $2E $20 $41 $62 $6F
.by  $72 $74 $69 $6E $67 $00 $0D $50  $61 $72 $73 $69 $6E $67 $20 $66  $69 $6C $65 $2E $00 $1D $4C $6F
.by  $6F $6B $69 $6E $67 $20 $66 $6F  $72 $20 $74 $61 $62 $6C $65 $20  $64 $65 $66 $69 $6E $69 $74 $69
.by  $6F $6E $2E $00 $07 $56 $45 $43  $54 $4F $52 $53 $00 $1F $43 $6F  $6C $75 $6D $6E $73 $20 $69 $6E
.by  $66 $6F $20 $6D $69 $73 $73 $69  $6E $67 $2E $20 $41 $62 $6F $72  $74 $69 $6E $67 $2E $00 $10 $4E
.by  $75 $6D $62 $65 $72 $20 $6F $66  $20 $72 $6F $77 $73 $3A $20 $00  $21 $4D $61 $78 $20 $6E $75 $6D
.by  $62 $65 $72 $20 $6F $66 $20 $72  $6F $77 $73 $3A $20 $34 $30 $2E  $20 $41 $62 $6F $72 $74 $69 $6E
.by  $67 $2E $00 $06 $54 $55 $50 $4C  $45 $53 $00 $1C $52 $6F $77 $73  $20 $69 $6E $66 $6F $20 $6D $69
.by  $73 $73 $69 $6E $67 $2E $20 $41  $62 $6F $72 $74 $69 $6E $67 $2E  $00 $13 $4E $75 $6D $62 $65 $72
.by  $20 $6F $66 $20 $63 $6F $6C $75  $6D $6E $73 $3A $20 $00 $04 $44  $41 $54 $41 $00 $1C $44 $61 $74
.by  $61 $20 $69 $6E $66 $6F $20 $6D  $69 $73 $73 $69 $6E $67 $2E $20  $41 $62 $6F $72 $74 $69 $6E $67
.by  $2E $00 $1C $44 $61 $74 $61 $20  $66 $6F $75 $6E $64 $2E $20 $50  $61 $72 $73 $69 $6E $67 $20 $72
.by  $65 $63 $6F $72 $64 $73 $2E $00  $08 $1C $52 $65 $63 $6F $72 $64  $20 $00 $04 $20 $6F $66 $20 $00
.by  $17 $44 $61 $74 $61 $20 $70 $61  $72 $73 $65 $64 $20 $61 $6E $64  $20 $6C $6F $61 $64 $65 $64 $2E
.by  $00 $21 $4E $75 $6D $62 $65 $72  $20 $6F $66 $20 $73 $74 $72 $69  $6E $67 $20 $66 $69 $65 $6C $64
.by  $73 $20 $73 $6B $69 $70 $70 $65  $64 $3A $20 $00 $20 $4C $6F $6F  $6B $69 $6E $67 $20 $66 $6F $72
.by  $20 $6D $69 $6E $69 $6D $75 $6D  $20 $61 $6E $64 $20 $6D $61 $78  $69 $6D $75 $6D $2E $00 $05 $4D
.by  $61 $78 $3A $20 $00 $06 $20 $4D  $69 $6E $3A $20 $00 $18 $44 $61  $74 $61 $20 $6E $65 $65 $64 $20
.by  $6E $6F $72 $6D $61 $6C $69 $73  $61 $74 $69 $6F $6E $2E $00 $21  $41 $74 $74 $65 $6D $70 $74 $69
.by  $6E $67 $20 $74 $6F $20 $6E $6F  $72 $6D $61 $6C $69 $73 $65 $20  $74 $68 $65 $20 $64 $61 $74 $61
.by  $2E $00 $0C $50 $6C $65 $61 $73  $65 $20 $77 $61 $69 $74 $2E $00  $17 $4E $6F $72 $6D $61 $6C $69
.by  $73 $61 $74 $69 $6F $6E $20 $63  $6F $6D $70 $6C $65 $74 $65 $2E  $00 $24 $50 $72 $65 $73 $73 $20
.by  $61 $6E $79 $20 $6B $65 $79 $20  $74 $6F $20 $64 $69 $73 $70 $6C  $61 $79 $20 $61 $73 $20 $68 $65
.by  $61 $74 $6D $61 $70 $2E $00 $21  $48 $65 $61 $74 $6D $61 $70 $20  $30 $2E $35 $20 $62 $79 $20 $64
.by  $65 $6C $79 $2F $42 $6C $6F $77  $6A $6F $62 $62 $20 $32 $30 $32  $31 $00 $17 $68 $74 $74 $70 $3A
.by  $2F $2F $77 $77 $77 $2E $61 $74  $61 $72 $69 $2E $6F $72 $67 $2E  $70 $6C $00 $03 $02 $02 $01 $01
.by  $02 $02 $03 $03 $03 $03 $03 $03  $03 $02 $03 $28 $14 $14 $28 $50  $50 $A0 $A0 $40 $50 $50 $50 $28
.by  $28 $A0 $A0 $18 $18 $0C $18 $30  $30 $60 $60 $C0 $C0 $C0 $C0 $18  $0C $C0 $C0
.endm

	end
