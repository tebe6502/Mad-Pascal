const
    overlay_y_table : array[0..256] of dword = (0,320,640,960,1280,1600,1920,2240,2560,2880,3200,3520,3840,4160,4480,4800,5120,5440,5760,6080,6400,6720,7040,7360,7680,8000,8320,8640,8960,9280,9600,9920,10240,10560,10880,11200,11520,11840,12160,12480,12800,13120,13440,13760,14080,14400,14720,15040,15360,15680,16000,16320,16640,16960,17280,17600,17920,18240,18560,18880,19200,19520,19840,20160,20480,20800,21120,21440,21760,22080,22400,22720,23040,23360,23680,24000,24320,24640,24960,25280,25600,25920,26240,26560,26880,27200,27520,27840,28160,28480,28800,29120,29440,29760,30080,30400,30720,31040,31360,31680,32000,32320,32640,32960,33280,33600,33920,34240,34560,34880,35200,35520,35840,36160,36480,36800,37120,37440,37760,38080,38400,38720,39040,39360,39680,40000,40320,40640,40960,41280,41600,41920,42240,42560,42880,43200,43520,43840,44160,44480,44800,45120,45440,45760,46080,46400,46720,47040,47360,47680,48000,48320,48640,48960,49280,49600,49920,50240,50560,50880,51200,51520,51840,52160,52480,52800,53120,53440,53760,54080,54400,54720,55040,55360,55680,56000,56320,56640,56960,57280,57600,57920,58240,58560,58880,59200,59520,59840,60160,60480,60800,61120,61440,61760,62080,62400,62720,63040,63360,63680,64000,64320,64640,64960,65280,65600,65920,66240,66560,66880,67200,67520,67840,68160,68480,68800,69120,69440,69760,70080,70400,70720,71040,71360,71680,72000,72320,72640,72960,73280,73600,73920,74240,74560,74880,75200,75520,75840,76160,76480,76800,77120,77440,77760,78080,78400,78720,79040,79360,79680,80000,80320,80640,80960,81280,81600,81920);

procedure vbxeOverlayPlot(color: byte; x, y: word);
begin
    vram.position := VBXE_OVRADR + x + overlay_y_table[y];
    vram.WriteByte(color);
end;

procedure vbxeOverlayLineHorizontal(color: byte; x1: word; y1: byte; x2: word);
var
    x: word;
begin
   
    for x := x1 to x2 do vbxeOverlayPlot(color, x, y);

end;

procedure vbxeOverlayLine(color: byte; x1: word; y1: byte; x2: word; y2: byte);
var
     d, ai, bi: smallint;
     dx, dy: smallint;
     xi, yi: smallint;
     x, y: word;
begin
   
     x := x1;
     y := y1;
     
     if x1 < x2 then begin
         xi := 1;
         dx := x2 - x1;
     end else begin
         xi := -1;
         dx := x1 - x2;
     end;

     if y1 < y2 then begin
         yi := 1;
         dy := y2 - y1;
     end else begin
         yi := -1;
         dy := y1 - y2;
     end;
     
     vbxeOverlayPlot(color, x, y);

     if dx > dy then begin

          ai := (dy - dx) * 2;
          bi := dy * 2;
          d := bi - dx;
         
          while x <> x2 do begin

               if d >= 0 then begin

                   x := x + xi;
                   y := y + yi;
                   d := d + ai;

               end else begin
                   d := d + bi;
                   x := x + xi;
               end;

               vbxeOverlayPlot(color, x, y);

          end;

     end else begin

         ai := ( dx - dy ) * 2;
         bi := dx * 2;             
         d := bi - dy;             

          while (y <> y2) do begin

               if d >= 0 then begin
                    x := x + xi;
                    y := y + yi;
                    d := d + ai;
               end else begin
                    d := d + bi;
                    y := y + yi;
               end;

               vbxeOverlayPlot(color, x, y);

          end;
     end;

end;
